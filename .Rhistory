if (!require("pacman")) install.packages("pacman")
if (!requireNamespace("ggplot2", versionCheck = "3.4.0", quietly = TRUE)) {
install.packages("ggplot2", repos = "http://cran.us.r-project.org")
}
library("pacman")
p_load(tidyverse, lubridate, stringr, tidylog, skimr, #Data wrangling
IRdisplay, kableExtra, gtsummary) #table making
#R.Version()
## define custom test for tables
fisher.test.simulate.p.values <- function(data, variable, by, ...) {
result <- list()
test_results <- stats::fisher.test(data[[variable]], data[[by]], simulate.p.value = TRUE)
result$p <- test_results$p.value
result$test <- test_results$method
result
}
#options(repr.matrix.max.cols=150, repr.matrix.max.rows=200)
theme_gtsummary_journal(journal = "jama")
#> Setting theme `JAMA`
theme_gtsummary_compact()
#> Setting theme `Compact`
p_load(mice, miceadds, estimatr, broom, naniar, howManyImputations)
#p_load_gh("cran/survey")
p_load(survey, MatchThem, cobalt)
#Load files
df.central <- read_csv("df_central.csv")
df.central %>% names()
if (!require("pacman")) install.packages("pacman")
if (!requireNamespace("ggplot2", versionCheck = "3.4.0", quietly = TRUE)) {
install.packages("ggplot2", repos = "http://cran.us.r-project.org")
}
library("pacman")
p_load(tidyverse, lubridate, stringr, tidylog, skimr, #Data wrangling
IRdisplay, kableExtra, gtsummary) #table making
#R.Version()
## define custom test for tables
fisher.test.simulate.p.values <- function(data, variable, by, ...) {
result <- list()
test_results <- stats::fisher.test(data[[variable]], data[[by]], simulate.p.value = TRUE)
result$p <- test_results$p.value
result$test <- test_results$method
result
}
#options(repr.matrix.max.cols=150, repr.matrix.max.rows=200)
theme_gtsummary_journal(journal = "jama")
#> Setting theme `JAMA`
theme_gtsummary_compact()
#> Setting theme `Compact`
p_load(mice, miceadds, estimatr, broom, naniar, howManyImputations)
#p_load_gh("cran/survey")
p_load(survey, MatchThem, cobalt)
#Load files
df.central <- read_csv("df_central.csv")
df.central %>% names()
#Usage statistics
df.central %>%
filter(`Long acting glycopeptide (yes/no)` == "Yes") %>%
select(`Bacteremia, isolated` = isolated_bacteremia,
Osteomyelitis = dx_Osteomyelitis,
`Septic arthritis` = `dx_Septic arthritis`,
Endocarditis = dx_Endocarditis,
#Piomyositis = dx_Myositis,
glyco_name_short) %>%
tbl_summary( )
df.central %>%
filter(`Long acting glycopeptide (yes/no)` == "Yes") %>%
select(`Bacteremia, isolated` = isolated_bacteremia,
Osteomyelitis = dx_Osteomyelitis,
`Septic arthritis` = `dx_Septic arthritis`,
Endocarditis = dx_Endocarditis,
#Piomyositis = dx_Myositis,
glyco_name_short) %>%
tbl_summary(by = glyco_name_short,
percent = "column")  %>%
add_p() %>%
add_overall()
df.central %>%
filter(`Long acting glycopeptide (yes/no)` == "Yes") %>%
select(`Bacteremia, isolated` = isolated_bacteremia,
Osteomyelitis = dx_Osteomyelitis,
`Septic arthritis` = `dx_Septic arthritis`,
Endocarditis = dx_Endocarditis,
#Piomyositis = dx_Myositis,
`Any SUD or drug use`) %>%
tbl_summary(by = `Any SUD or drug use`,
percent = "column")  %>%
add_p() %>%
add_overall()
#Geographic
df.central %>%
filter(`Any SUD or drug use` == "Yes") %>%
select(
`Long acting glycopeptide (yes/no)`,
`One digit zip code` = zip_code) %>%
tbl_summary(by = c(`Long acting glycopeptide (yes/no)`),
percent = "row")  %>%
add_p() %>%
add_overall()
df.central %>%
filter(`Any SUD or drug use` == "No") %>%
select(
`Long acting glycopeptide (yes/no)`,
`One digit zip code` = zip_code) %>%
tbl_summary(by = c(`Long acting glycopeptide (yes/no)`),
percent = "row")  %>%
add_p() %>%
add_overall()
#Select variables for table 1
df.table.1 <- df.central %>%
select(
`Age, years` = age,
Gender = gender,
Race = race2,
Ethnicity = ethnicity,
Insurance = insurance,
`Alcohol abuse`,
`Blood loss anemia`,
`Chronic peptic ulcer disease`,
`Chronic pulmonary disease`,
`Coagulation deficiency`,
`Congestive heart failure`,
`Deficiency anemias`,
`Depression`,
`Diabetes with chronic complications`,
`Diabetes without chronic complications`,
#`Drug abuse`,
`Fluid and electrolyte disorders`,
`HIV and AIDS` = `HIV and AIDS (Acquired immune deficiency syndrome)`,
`Hypertension, complicated`,
`Hypertension, uncomplicated`,
`Hypothyroidism`,
`Liver disease`,
`Lymphoma`,
`Metastatic cancer`,
`Obesity`,
`Other neurological disorders`,
`Paralysis`,
`Peripheral vascular disease`,
`Psychoses`,
`Pulmonary circulation disorders`,
`Renal failure`,
`Rheumatoid arthritiscollagen vascular diseases`,
`Solid tumor without metastasis`,
`Valvular disease`,
`Weight loss`,
`Elixhauser (AHRQ), index` = ElixhauserAHRQ,
`Elixhauser, number of conditions` = Elixhauser_conditions_num,
`Elixhauser, number of conditions (grouped)` = Elixhauser_conditions_groups,
`History of opioid use or disorder`,
`History of cocaine use or disorder`,
`History of methamphetamine use or disorder`,
`Injection drug use` = idu,
`Any SUD or drug use`,
MOUD = moud,
#`Length of stay, index admission` = los_index,  # Add the missing backtick here
#Discharge = discharge_disposition,
`Bed size` = bed_size,
`One digit zip code` = zip_code,
`Bacteremia, isolated` = isolated_bacteremia,
Osteomyelitis = dx_Osteomyelitis,
`Septic arthritis` = `dx_Septic arthritis`,
Endocarditis = dx_Endocarditis,
#Piomyositis = dx_Myositis,
`Long acting glycopeptide (yes/no)`
)
#Display table 1 using gtsummary for PWUD
tbl.1.pwud <- df.table.1 %>%
filter(`Any SUD or drug use` == "Yes") %>%
select(-c(`Any SUD or drug use`)) %>%
tbl_summary(by = `Long acting glycopeptide (yes/no)`,
sort = list(everything() ~ "frequency",
`Elixhauser, number of conditions (grouped)` ~ "alphanumeric"),
statistic = list(all_continuous() ~ "{mean} ({sd})")) %>%
add_p(test = list(all_categorical() ~ "fisher.test.simulate.p.values",
all_continuous() ~ "t.test")) %>%
modify_caption("Table 1. Patient characteristics for PWUD") %>%
bold_labels() #%>%
#Display table 1 using gtsummary non PWUD
tbl.1.non.pwud <- df.table.1 %>%
filter(`Any SUD or drug use` == "No") %>%
select(-c(`History of opioid use or disorder`,
`History of cocaine use or disorder`,
`History of methamphetamine use or disorder`,
`Injection drug use`,
`Any SUD or drug use`,
MOUD)) %>%
tbl_summary(by = `Long acting glycopeptide (yes/no)`,
sort = list(everything() ~ "frequency",
`Elixhauser, number of conditions (grouped)` ~ "alphanumeric"),
statistic = list(all_continuous() ~ "{mean} ({sd})")) %>%
add_p(test = list(all_categorical() ~ "fisher.test.simulate.p.values",
all_continuous() ~ "t.test")) %>%
#add_p(test.args = all_tests("fisher.test") ~ list(workspace=2e9)) %>%
modify_caption("Table 1. Patient characteristics for non-PWUD") %>%
bold_labels() #%>%
df.outcomes <- df.central %>%
select(
personid,
`Long acting glycopeptide (yes/no)`,
`Any SUD or drug use`,
`Follow-up time, days` = censure_time,
`Length of stay, index admission` = los_index,  # Add the missing backtick here
Discharge = discharge_disposition,
#`Readmission, 30 days` = readmissions_30d,
`Readmission, 90 days` = readmissions_90d,
#`Readmission, 365 days` = readmissions_365d,
#`Number of readmission, 365 days` = num_readmissions_365d,
#`ED visit, 30 days` = edvisit_30d,
`ED visit, 90 days` = edvisit_90d,
#`ED visit, 365 days` = edvisit_365d,
#`Number of ED visits, 365 days` = num_edvisits_365d,
#`Reinfection, 30 days` = reinfection_30d,
#`Reinfection, 90 days` = reinfection_90d,
#`Reinfection, 365 days` = reinfection_365d,
#`Hospice, 30 days` = hospice_30d,
#`Hospice, 90 days` = hospice_90d,
#`Hospice, 365 days` = hospice_365d,
#`Death, 30 days` = death_30d,
#`Death, 90 days` = death_90d,
#`Death, 365 days` = death_365d,
#`Death or hospice, 30 days` = death_or_hospice_30d,
`Death or hospice, 90 days` = death_or_hospice_90d,
#`Death or hospice, 365 days` = death_or_hospice_365d,
`Composite: Readmission, ED visit, or death/hospice, 90 days` = composite
) %>%
mutate(
retention_90_days = if_else(
`Follow-up time, days` >= 90 |
`Readmission, 90 days` == 1 |
`ED visit, 90 days` == 1 |
`Death or hospice, 90 days` == 1,
1, 0
)
)
#Outcomes table for PWUD
tbl.outcomes.pwud <- df.outcomes %>%
filter(`Any SUD or drug use` == "Yes") %>%
select(-personid, -`Any SUD or drug use`) %>%
tbl_summary(by = `Long acting glycopeptide (yes/no)`,
sort = everything() ~ "frequency",
statistic = list(all_continuous() ~ "{mean} ({sd})")) %>%
add_p(test = list(all_categorical() ~ "fisher.test.simulate.p.values",
all_continuous() ~ "t.test")) %>%
modify_caption("Table outcomes by glycopeptides use / pwud") %>%
bold_labels() %>%
add_overall()
View(df.outcomes)
View(df.outcomes)
df.outcomes <- df.central %>%
select(
personid,
`Long acting glycopeptide (yes/no)`,
`Any SUD or drug use`,
`Follow-up time, days` = censure_time,
`Length of stay, index admission` = los_index,  # Add the missing backtick here
Discharge = discharge_disposition,
#`Readmission, 30 days` = readmissions_30d,
`Readmission, 90 days` = readmissions_90d,
#`Readmission, 365 days` = readmissions_365d,
#`Number of readmission, 365 days` = num_readmissions_365d,
#`ED visit, 30 days` = edvisit_30d,
`ED visit, 90 days` = edvisit_90d,
#`ED visit, 365 days` = edvisit_365d,
#`Number of ED visits, 365 days` = num_edvisits_365d,
#`Reinfection, 30 days` = reinfection_30d,
#`Reinfection, 90 days` = reinfection_90d,
#`Reinfection, 365 days` = reinfection_365d,
#`Hospice, 30 days` = hospice_30d,
#`Hospice, 90 days` = hospice_90d,
#`Hospice, 365 days` = hospice_365d,
#`Death, 30 days` = death_30d,
#`Death, 90 days` = death_90d,
#`Death, 365 days` = death_365d,
#`Death or hospice, 30 days` = death_or_hospice_30d,
`Death or hospice, 90 days` = death_or_hospice_90d,
#`Death or hospice, 365 days` = death_or_hospice_365d,
`Composite: Readmission, ED visit, or death/hospice, 90 days` = composite
) %>%
mutate(
retention_90_days = if_else(
`Follow-up time, days` >= 90 |
`Readmission, 90 days` == 1 |
`ED visit, 90 days` == 1 |
`Death or hospice, 90 days` == 1,
1, 0
)
) %>%
%>%
df.outcomes <- df.central %>%
select(
personid,
`Long acting glycopeptide (yes/no)`,
`Any SUD or drug use`,
`Follow-up time, days` = censure_time,
`Length of stay, index admission` = los_index,  # Add the missing backtick here
Discharge = discharge_disposition,
#`Readmission, 30 days` = readmissions_30d,
`Readmission, 90 days` = readmissions_90d,
#`Readmission, 365 days` = readmissions_365d,
#`Number of readmission, 365 days` = num_readmissions_365d,
#`ED visit, 30 days` = edvisit_30d,
`ED visit, 90 days` = edvisit_90d,
#`ED visit, 365 days` = edvisit_365d,
#`Number of ED visits, 365 days` = num_edvisits_365d,
#`Reinfection, 30 days` = reinfection_30d,
#`Reinfection, 90 days` = reinfection_90d,
#`Reinfection, 365 days` = reinfection_365d,
#`Hospice, 30 days` = hospice_30d,
#`Hospice, 90 days` = hospice_90d,
#`Hospice, 365 days` = hospice_365d,
#`Death, 30 days` = death_30d,
#`Death, 90 days` = death_90d,
#`Death, 365 days` = death_365d,
#`Death or hospice, 30 days` = death_or_hospice_30d,
`Death or hospice, 90 days` = death_or_hospice_90d,
#`Death or hospice, 365 days` = death_or_hospice_365d,
`Composite: Readmission, ED visit, or death/hospice, 90 days` = composite
) %>%
mutate(
retention_90_days = if_else(
`Follow-up time, days` >= 90 |
`Readmission, 90 days` == 1 |
`ED visit, 90 days` == 1 |
`Death or hospice, 90 days` == 1,
1, 0
)
) %>%
mutate(
loss_to_follow_up_90_days = if_else(
`Follow-up time, days` < 90 &
`Readmission, 90 days` == 0 &
`ED visit, 90 days` == 0 &
`Death or hospice, 90 days` == 0,
1,  # Mark as lost to follow-up
0   # Not lost to follow-up
)
)
df.outcomes %>%
filter(`Any SUD or drug use` == "Yes") %>%
select(-personid, -`Any SUD or drug use`)
df.outcomes %>%
filter(`Any SUD or drug use` == "Yes") %>%
select(-personid, -`Any SUD or drug use`) %>%
tbl_summary(by = `Long acting glycopeptide (yes/no)`,
sort = everything() ~ "frequency",
statistic = list(all_continuous() ~ "{mean} ({sd})"))
df.outcomes %>%
filter(`Any SUD or drug use` == "Yes") %>%
select(-personid, -`Any SUD or drug use`) %>%
tbl_summary(by = `Long acting glycopeptide (yes/no)`,
sort = everything() ~ "frequency",
statistic = list(all_continuous() ~ "{mean} ({sd})")) %>%
add_p(test = list(all_categorical() ~ "fisher.test.simulate.p.values",
all_continuous() ~ "t.test"))
df.outcomes %>%
filter(`Any SUD or drug use` == "Yes") %>%
select(-personid, -`Any SUD or drug use`) %>%
tbl_summary(by = `Long acting glycopeptide (yes/no)`,
sort = everything() ~ "frequency",
statistic = list(all_continuous() ~ "{mean} ({sd})")) %>%
add_p()
